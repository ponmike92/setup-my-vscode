[
	// PANELS
	// sidebar
	{
		"command": "workbench.action.toggleSidebarVisibility",
		"key": "cmd+s"
	},

	// project manager
	{
		"key": "alt+cmd+p",
		"command": "workbench.view.extension.project-manager"
	},
	// explorer
	{
		"key": "shift+cmd+e",
		"when": "explorerViewletVisible",
		"command": "workbench.view.explorer"
	},
	{
		"key": "shift+cmd+e",
		"when": "!explorerViewletVisible",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["workbench.view.explorer", "workbench.action.focusActiveEditorGroup"]
		}
	},
	// explorer - ordering
	{
		"key": "shift+cmd+u",
		"command": "toggle",
		"args": {
			"id": "explorer_files_order",
			"value": [
				{
					"explorer.sortOrder": "default"
				},
				{
					"explorer.sortOrder": "modified"
				}
			]
		}
	},
	// explorer - gitignore
	{
		"key": "shift+cmd+.",
		"command": "explorer-gitignore.toggle"
	},
	// explorer - etc
	{
		"key": "shift+cmd+e",
		"when": "viewContainer.workbench.view.explorer.enabled",
		"command": "-workbench.view.explorer"
	},
	{
		"key": "ctrl+shift+alt+cmd+v",
		"when": "workbench.explorer.openEditorsView.visible",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["workbench.files.action.focusOpenEditorsView", "workbench.action.focusActiveEditorGroup"]
		}
	},
	{
		"key": "ctrl+shift+alt+cmd+v",
		"when": "openEditorsFocus",
		"command": "workbench.action.focusActiveEditorGroup"
	},
	// outline
	{
		"key": "shift+cmd+o",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["workbench.view.extension.outline-map", "workbench.action.focusActiveEditorGroup"]
		}
	},
	// timeline
	{
		"key": "shift+cmd+t",
		"command": "timeline.focus"
	},
	{
		"key": "shift+cmd+t",
		"when": "sideBarFocus && timeline.active && view.timeline.visible",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["workbench.action.focusActiveEditorGroup"]
		}
	},
	// REPL Python
	{
		"key": "shift+enter",
		"command": "-jupyter.execSelectionInteractive",
		"when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !isCompositeNotebook && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "cmd+i",
		"command": "python.execInREPL"
	},
	// git
	{
		"key": "shift+cmd+g",
		"command": "workbench.view.scm"
	},
	// git - commit
	{
		"key": "cmd+g c",
		"command": "autoCommit.commitStagedChanges"
	},
	// {
	// 	"key": "cmd+g c",
	// 	"command": "git.commitStaged"
	// },
	// git - view
	{
		"key": "cmd+g d",
		"command": "git.openChange"
	},
	{
		"key": "cmd+g v",
		"command": "git.viewChanges"
	},
	{
		"key": "cmd+g f",
		"command": "git.viewStagedChanges"
	},
	// git - staging
	{
		"key": "cmd+g shift+s",
		"command": "git.stageAll"
	},
	{
		"key": "cmd+g s",
		"command": "git.stage"
	},
	{
		"key": "cmd+g a",
		"command": "git.stageSelectedRanges"
	},
	{
		"key": "cmd+g x",
		"command": "git.unstageSelectedRanges"
	},
	// git - undo/redo
	{
		"key": "cmd+g z",
		"command": "git.revertSelectedRanges"
	},
	{
		"key": "cmd+g e",
		"command": "git.commitAmend"
	},
	{
		"key": "cmd+g u",
		"command": "workbench.action.terminal.sendSequence",
		"args": { "text": "git reset --soft HEAD~1\n" }
	},
	// git - pushpull
	{
		"key": "cmd+g p",
		"command": "git.push"
	},
	{
		"key": "cmd+g g",
		"command": "git.pull"
	},
	// git - off
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "shift+cmd+g",
		"command": "-workbench.action.terminal.findPrevious",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "shift+cmd+g",
		"command": "-workbench.action.terminal.openDetectedLink",
		"when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "shift+cmd+g",
		"command": "-editor.action.previousMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "cmd+k cmd+r",
		"command": "-git.revertSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "cmd+k alt+cmd+s",
		"command": "-git.stageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "cmd+k cmd+n",
		"command": "-git.unstageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	// editor
	{
		"key": "ctrl+shift+right",
		"command": "workbench.action.moveEditorToRightGroup"
	},
	{
		"key": "ctrl+shift+left",
		"command": "workbench.action.moveEditorToLeftGroup"
	},
	// terminal
	{
		"key": "cmd+`+shift",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "shift+cmd+i",
		"command": "workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	// terminal - off
	{
		"key": "shift+cmd+i",
		"command": "-workbench.action.chat.openEditSession",
		"when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat2.stop",
		"when": "inlineChatHasEditsAgent && inlineChatVisible && chatEdits.requestCount == '0'"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat2.reveal",
		"when": "inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	// infranodus
	{
		"key": "shift+cmd+m",
		"command": "infranodus-graph-view.graphView.focus"
	},
	// time report
	{
		"key": "shift+cmd+h",
		"command": "time.showReport"
	},
	// tree extractor
	{
		"key": "shift+cmd+c",
		"command": "fileTreeExtractor.copyFileTreeFromThisDir"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-fileTreeExtractor.copyFileTree"
	},
	// colors
	{
		"key": "cmd+k",
		"when": "editorTextFocus",
		"command": "toggle",
		"args": {
			"id": "colorize_on_off",
			"value": [
				{
					"colorize.include": ["**/*.json", "**/*.conf", "**/*.conf", "**/*.md"],
					"colorize.languages": ["css", "sass", "scss", "less", "postcss", "sss", "stylus", "xml", "svg", "toml", "json"],
					"colorize.enable_search_variables": true,
					"colorize.colorized_colors": ["BROWSERS_COLORS", "HEXA", "RGB", "HSL", "OKLAB", "OKLCH"]
				},
				{
					"colorize.include": [],
					"colorize.languages": [],
					"colorize.enable_search_variables": false,
					"colorize.colorized_colors": []
				}
			]
		}
	},
	// dimmer
	// lines
	{
		"key": "shift+cmd+l",
		"command": "toggle",
		"when": "editorTextFocus",
		"args": {
			"id": "line_numbers",
			"value": [
				{
					"editor.lineNumbers": "on"
				},
				{
					"editor.lineNumbers": "off"
				}
			]
		}
	},
	// numlines & glyphs
	{
		"key": "shift+cmd+y",
		"command": "toggle",
		"when": "editorTextFocus",
		"args": {
			"id": "line_glyphs",
			"value": [
				{
					"editor.glyphMargin": true
				},
				{
					"editor.glyphMargin": false
				}
			]
		}
	},
	// word wraping
	{
		"key": "shift+cmd+;",
		"command": "toggle",
		"when": "editorTextFocus",
		"args": {
			"id": "word_wrapping",
			"value": [
				{
					"editor.wordWrapColumn": 120
				},
				{
					"editor.wordWrapColumn": 90
				},
				{
					"editor.wordWrapColumn": 50
				}
			]
		}
	},
	// move up/down
	{
		"key": "cmd+up",
		"command": "betterPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "cmd+down",
		"command": "betterPageDown"
	},
	// move up/down - off
	{
		"key": "pageup",
		"command": "-betterPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	// select by regex
	{
		"key": "ctrl+cmd+a",
		"command": "selectby.regex",
		"args": ["SelectParagraph"],
		"when": "editorTextFocus"
	},
	{
		"key": "shift+cmd+a",
		"command": "selectby.regex",
		"args": ["SelectBetweenHeadings"],
		"when": "editorTextFocus"
	},

	// {
	// 	"key": "cmd+up",
	// 	"command": "editor.action.moveLinesUpAction",
	// 	"when": "editorTextFocus && !editorReadonly"
	// },
	// {
	// 	"key": "cmd+down",
	// 	"command": "editor.action.moveLinesDownAction",
	// 	"when": "editorTextFocus && !editorReadonly"
	// },
	// warnings and errors
	// {
	// 	"key": "cmd+e",
	// 	"command": "editor.action.marker.next"
	// },
	{
		"key": "escape",
		"command": "closeMarkersNavigation",
		"when": "markersNavigationVisible"
	},
	{
		"key": "cmd+.",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "cmd+[Period]",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	// {
	// 	"key": "cmd+.",
	// 	"command": "-workbench.action.terminal.showQuickFixes",
	// 	"when": "terminalFocus"
	// },
	// {
	// 	"key": "cmd+.",
	// 	"command": "-problems.action.showQuickFixes",
	// 	"when": "problemFocus"
	// },

	// elements
	{
		"command": "-workbench.action.toggleSidebarVisibility",
		"key": "cmd+b"
	},
	// bookmarks
	{
		"key": "shift+cmd+b",
		"when": "!editorFocus && !filesExplorerFocus",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["workbench.view.explorer", "workbench.action.focusActiveEditorGroup"]
			"sequence": ["workbench.action.focusActiveEditorGroup"]
		}
	},
	{
		"key": "alt+cmd+up",
		"when": "editorTextFocus",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["bookmarks.jumpToPrevious", "scroll-faster.down"]
			"sequence": ["bookmarks.jumpToPrevious"]
		}
	},
	{
		"key": "alt+cmd+down",
		"when": "editorTextFocus",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["bookmarks.jumpToNext", "scroll-faster.down"]
			"sequence": ["bookmarks.jumpToNext"]
		}
	},
	// {
	// 	"key": "ctrl+cmd+down",
	// 	"command": "scroll-faster.down",
	// 	"when": "textInputFocus"
	// },
	// {
	// 	"key": "ctrl+cmd+up",
	// 	"command": "scroll-faster.up",
	// 	"when": "textInputFocus"
	// },
	{
		"key": "ctrl+down",
		"command": "-scroll-faster.down",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-scroll-faster.up",
		"when": "textInputFocus"
	},
	// diff
	{
		"key": "shift+cmd+d",
		"command": "extension.partialDiff.diffSelectionWithClipboard"
	},
	{
		"key": "alt+cmd+up",
		"when": "textCompareEditorVisible",
		"command": "workbench.action.compareEditor.previousChange"
	},
	{
		"key": "alt+cmd+down",
		"when": "textCompareEditorVisible",
		"command": "workbench.action.compareEditor.nextChange"
	},
	// changes
	{
		"key": "cmd+l",
		"command": "workbench.action.editor.nextChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	// references
	{
		"key": "shift+cmd+r",
		"command": "references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},
	{
		"key": "alt+cmd+down",
		"command": "references-view.next",
		"when": "reference-list.hasResult && references-view.canNavigate && view.references-view.tree.visible"
	},
	{
		"key": "alt+cmd+up",
		"command": "references-view.prev",
		"when": "reference-list.hasResult && references-view.canNavigate && view.references-view.tree.visible"
	},
	// find
	{
		"key": "escape",
		"command": "closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !inlineSuggestionVisible && !inlineEditIsVisible"
	},
	// multicursor
	{
		"key": "escape",
		"command": "removeSecondaryCursors",
		"when": "editorHasMultipleSelections"
	},
	// suggestions
	{
		"key": "alt+cmd+j",
		"command": "toggle",
		"args": {
			"id": "word_suggestions",
			"value": [
				{
					"editor.suggest.showWords": true
				},
				{
					"editor.suggest.showWords": false
				}
			]
		}
	},
	{
		"key": "escape",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible"
	},
	// etc.
	{
		"key": "shift+escape",
		"command": "-closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "enter",
		"when": "editorFocus && findInputFocussed",
		"command": "-editor.action.nextMatchFindAction"
	},
	{
		"key": "shift+enter",
		"command": "-editor.action.previousMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "enter",
		"when": "editorFocus && findInputFocussed",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["editor.action.nextMatchFindAction", "scroll-faster.down"]
			"sequence": ["editor.action.nextMatchFindAction"]
		}
	},
	{
		"key": "ctrl+enter",
		"when": "editorFocus && findInputFocussed",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["editor.action.previousMatchFindAction", "scroll-faster.down"]
			"sequence": ["editor.action.previousMatchFindAction"]
		}
	},
	{
		"key": "alt+enter",
		"when": "editorFocus && findInputFocussed",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["editor.action.previousMatchFindAction", "scroll-faster.down"]
			"sequence": ["editor.action.previousMatchFindAction"]
		}
	},
	{
		"key": "shift+enter",
		"when": "editorFocus && findInputFocussed",
		"command": "extension.multiCommand.execute",
		"args": {
			// "sequence": ["editor.action.previousMatchFindAction", "scroll-faster.down"]
			"sequence": ["editor.action.previousMatchFindAction"]
		}
	},

	{
		"command": "-workbench.action.nextEditor",
		"key": "shift+cmd+]"
	},
	{
		"command": "-workbench.action.previousEditor",
		"key": "shift+cmd+["
	},
	{
		"command": "workbench.action.nextEditor",
		"key": "ctrl+tab"
	},
	{
		"command": "workbench.action.previousEditor",
		"key": "ctrl+shift+tab"
	},
	{
		"key": "shift+cmd+t",
		"command": "-workbench.action.reopenClosedEditor"
	},
	{
		"key": "cmd+k cmd+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "cmd+k shift+cmd+right",
		"command": "-workbench.action.moveEditorRightInGroup"
	},
	{
		"key": "cmd+k right",
		"command": "-workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+right",
		"command": "-quickInput.acceptInBackground",
		"when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
	},
	{
		"key": "cmd+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "cmd+3",
		"command": "-workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "cmd+6",
		"command": "-workbench.action.focusSixthEditorGroup"
	},
	{
		"key": "cmd+7",
		"command": "-workbench.action.focusSeventhEditorGroup"
	},
	{
		"key": "cmd+8",
		"command": "-workbench.action.focusEighthEditorGroup"
	},
	{
		"key": "cmd+5",
		"command": "-workbench.action.focusFifthEditorGroup"
	},
	{
		"key": "cmd+4",
		"command": "-workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "cmd+2",
		"command": "-workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "cmd+k cmd+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "cmd+k cmd+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "cmd+k cmd+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+right",
		"command": "workbench.action.focusRightGroup"
	},
	{
		"key": "ctrl+left",
		"command": "workbench.action.focusLeftGroup"
	},
	{
		"key": "cmd+k cmd+\\",
		"command": "-workbench.action.splitEditorDown"
	},
	{
		"key": "cmd+k shift+cmd+\\",
		"command": "-workbench.action.splitEditorInGroup",
		"when": "activeEditorCanSplitInGroup"
	},
	{
		"key": "cmd+k cmd+\\",
		"command": "-workbench.action.splitEditorLeft"
	},
	{
		"key": "cmd+k cmd+\\",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "cmd+k cmd+\\",
		"command": "-workbench.action.splitEditorRight"
	},
	{
		"key": "cmd+k cmd+\\",
		"command": "-workbench.action.splitEditorUp"
	},
	{
		"key": "cmd+k cmd+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},
	{
		"key": "ctrl+b",
		"command": "-cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+b",
		"command": "workbench.action.splitEditorDown"
	},
	{
		"key": "cmd+k down",
		"command": "-workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "cmd+k left",
		"command": "-workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "cmd+k up",
		"command": "-workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "ctrl+cmd+1",
		"command": "-workbench.action.moveEditorToFirstGroup"
	},
	{
		"key": "ctrl+cmd+9",
		"command": "-workbench.action.moveEditorToLastGroup"
	},
	{
		"key": "ctrl+cmd+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "ctrl+cmd+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+shift+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+k shift+cmd+left",
		"command": "-workbench.action.moveEditorLeftInGroup"
	},
	{
		"key": "cmd+k shift+cmd+w",
		"command": "-workbench.action.closeAllGroups"
	},
	{
		"key": "cmd+k w",
		"command": "-workbench.action.closeEditorsInGroup"
	},
	{
		"key": "alt+cmd+t",
		"command": "-workbench.action.closeOtherEditors"
	},
	{
		"key": "cmd+k u",
		"command": "-workbench.action.closeUnmodifiedEditors"
	},
	{
		"key": "ctrl+up",
		"command": "workbench.action.focusAboveGroup"
	},
	{
		"key": "ctrl+down",
		"command": "workbench.action.focusBelowGroup"
	},
	{
		"key": "cmd+1",
		"command": "workbench.action.openEditorAtIndex1"
	},
	{
		"key": "ctrl+1",
		"command": "-workbench.action.openEditorAtIndex1"
	},
	{
		"key": "cmd+2",
		"command": "workbench.action.openEditorAtIndex2"
	},
	{
		"key": "ctrl+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "cmd+3",
		"command": "workbench.action.openEditorAtIndex3"
	},
	{
		"key": "ctrl+3",
		"command": "-workbench.action.openEditorAtIndex3"
	},
	{
		"key": "cmd+4",
		"command": "workbench.action.openEditorAtIndex4"
	},
	{
		"key": "ctrl+4",
		"command": "-workbench.action.openEditorAtIndex4"
	},
	{
		"key": "cmd+5",
		"command": "workbench.action.openEditorAtIndex5"
	},
	{
		"key": "ctrl+5",
		"command": "-workbench.action.openEditorAtIndex5"
	},
	{
		"key": "cmd+6",
		"command": "workbench.action.openEditorAtIndex6"
	},
	{
		"key": "ctrl+6",
		"command": "-workbench.action.openEditorAtIndex6"
	},
	{
		"key": "cmd+7",
		"command": "workbench.action.openEditorAtIndex7"
	},
	{
		"key": "ctrl+7",
		"command": "-workbench.action.openEditorAtIndex7"
	},
	{
		"key": "cmd+8",
		"command": "workbench.action.openEditorAtIndex8"
	},
	{
		"key": "ctrl+8",
		"command": "-workbench.action.openEditorAtIndex8"
	},
	{
		"key": "cmd+9",
		"command": "workbench.action.openEditorAtIndex9"
	},
	{
		"key": "ctrl+9",
		"command": "-workbench.action.openEditorAtIndex9"
	},
	{
		"key": "ctrl+f",
		"command": "-cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+e",
		"command": "-cursorLineEnd",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+f",
		"command": "workbench.action.toggleMaximizeEditorGroup",
		"when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
	},
	{
		"key": "cmd+k cmd+m",
		"command": "-workbench.action.toggleMaximizeEditorGroup",
		"when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.toggleEditorWidths"
	},
	{
		"key": "cmd+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.switchWindow"
	},
	{
		"key": "shift+cmd+l",
		"command": "-selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "shift+cmd+l",
		"command": "-editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "shift+cmd+l",
		"command": "-addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "shift+cmd+b",
		"command": "-workbench.action.tasks.build",
		"when": "taskCommandsRegistered"
	},
	{
		"key": "shift+cmd+o",
		"command": "-workbench.action.terminal.openDetectedLink",
		"when": "terminalFocus && terminalHasBeenCreated"
	},
	{
		"key": "cmd+t",
		"command": "-workbench.action.showAllSymbols"
	},
	{
		"key": "shift+cmd+.",
		"command": "-editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "shift+cmd+o",
		"command": "-editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "cmd+r",
		"command": "-python.refreshTensorBoard",
		"when": "python.hasActiveTensorBoardSession"
	},
	{
		"key": "cmd+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "cmd+r",
		"command": "-workbench.action.terminal.runRecentCommand",
		"when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "cmd+r",
		"command": "-inlineChat.regenerate",
		"when": "inlineChatHasProvider && inlineChatVisible"
	},
	{
		"key": "shift+cmd+o",
		"command": "-workbench.action.gotoSymbol",
		"when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
	},
	{
		"key": "cmd+d",
		"command": "-editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "cmd+d",
		"command": "-notebook.addFindMatchToSelection",
		"when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "shift+cmd+y",
		"command": "-workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{
		"key": "cmd+e",
		"command": "-actions.findWithSelection"
	},
	{
		"key": "cmd+e",
		"command": "-editor.action.toggleScreenReaderAccessibilityMode",
		"when": "accessibilityHelpIsShown"
	},
	{
		"key": "alt+f12",
		"command": "-editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
	},
	{
		"key": "alt+cmd+o",
		"command": "workbench.action.files.openFile",
		"when": "false"
	},
	{
		"key": "cmd+o",
		"command": "-workbench.action.files.openFile",
		"when": "false"
	},
	{
		"key": "alt+cmd+o",
		"command": "workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "cmd+o",
		"command": "-workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "alt+cmd+o",
		"command": "workbench.action.files.openFileFolder",
		"when": "openFolderWorkspaceSupport"
	},
	{
		"key": "cmd+o",
		"command": "-workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "alt+cmd+o",
		"command": "workbench.action.files.openLocalFileFolder",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "cmd+o",
		"command": "-workbench.action.files.openLocalFileFolder",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "cmd+i",
		"command": "-workbench.action.chat.startVoiceChat",
		"when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
	},
	{
		"key": "cmd+i",
		"command": "-workbench.action.chat.stopListeningAndSubmit",
		"when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
	},
	{
		"key": "cmd+i",
		"command": "-workbench.action.terminal.chat.start",
		"when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "cmd+i",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.holdForSpeech",
		"when": "hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus"
	},
	{
		"key": "f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus"
	},
	{
		"key": "cmd+f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
	},
	{
		"key": "shift+cmd+d",
		"command": "-workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "shift+f12",
		"command": "-editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+cmd+r",
		"command": "-rerunSearchEditorSearch",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+-",
		"command": "-decreaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+=",
		"command": "-increaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "shift+cmd+.",
		"command": "-breadcrumbs.toggleToOn",
		"when": "!config.breadcrumbs.enabled"
	},
	{
		"key": "shift+cmd+.",
		"command": "-breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "shift+cmd+.",
		"command": "-editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+a",
		"command": "-notification.acceptPrimaryAction",
		"when": "notificationFocus || notificationToastsVisible"
	},
	{
		"key": "shift+cmd+n",
		"command": "-workbench.action.newWindow"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.files.newUntitledFile"
	},
	{
		"key": "cmd+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "cmd+n",
		"when": "filesExplorerFocus",
		"command": "explorer.newFile"
	},
	{
		"key": "shift+cmd+n",
		"when": "filesExplorerFocus",
		"command": "explorer.newFolder"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+n",
		"command": "-cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+n",
		"command": "-list.focusDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+n",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+n",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+n",
		"command": "-showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	// open file from explorer
	{
		"key": "space",
		"command": "-filesExplorer.openFilePreserveFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "shift+cmd+h",
		"command": "-workbench.action.replaceInFiles"
	},
	{
		"key": "shift+cmd+u",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "shift+cmd+s",
		"command": "-workbench.action.files.saveAs"
	},
	{
		"key": "shift+cmd+s",
		"command": "-workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "shift+cmd+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "cmd+s",
		"command": "-workbench.action.files.save"
	},
	{
		"key": "alt+cmd+s",
		"command": "workbench.action.files.save"
	},
	{
		"key": "cmd+k s",
		"command": "-workbench.action.files.saveWithoutFormatting"
	},
	{
		"key": "cmd+k d",
		"command": "-workbench.files.action.compareWithSaved"
	},
	{
		"key": "cmd+s",
		"command": "-chatEditing.saveAllFiles",
		"when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
	},
	{
		"key": "alt+cmd+b",
		"command": "-workbench.action.toggleAuxiliaryBar"
	},
	// {
	// 	"key": "shift+cmd+a",
	// 	"command": "workbench.action.toggleActivityBarVisibility"
	// },
	{
		"key": "shift+cmd+j",
		"command": "-workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},
	{
		"key": "cmd+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "shift+cmd+1",
		"command": "-editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "shift+cmd+1",
		"command": "-search.action.replace",
		"when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "shift+cmd+1",
		"command": "-search.action.replaceAllInFile",
		"when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "shift+cmd+1",
		"command": "-search.action.replaceAllInFolder",
		"when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "shift+cmd+j",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "cmd+j",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+space",
		"command": "-focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "cmd+j",
		"command": "toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+space",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "shift+cmd+p",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "shift+cmd+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "cmd+o",
		"command": "workbench.action.quickOpen"
	},
	{
		"key": "cmd+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "cmd+o",
		"command": "workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "cmd+p",
		"command": "-workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "cmd+p",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "f1",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "cmd+i",
		"command": "-focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "cmd+i",
		"command": "-notebook.cell.chat.start",
		"when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "cmd+i",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "cmd+i",
		"command": "-workbench.action.chat.holdToVoiceChatInChatView",
		"when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
	},
	{
		"key": "shift+cmd+v",
		"command": "-markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "shift+cmd+v",
		"command": "-notebook.cell.pasteAbove",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "shift+cmd+v",
		"command": "-markdown-preview-enhanced.openPreview",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "cmd+k v",
		"command": "-markdown-preview-enhanced.openPreviewToTheSide",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "cmd+k v",
		"command": "-markdown.extension.closePreview",
		"when": "activeWebviewPanelId == 'markdown.preview'"
	},
	{
		"key": "shift+cmd+v",
		"command": "-markdown.extension.closePreview",
		"when": "activeWebviewPanelId == 'markdown.preview'"
	},
	{
		"key": "cmd+k shift+cmd+7",
		"command": "-chatgpt-vscode.adhoc",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+5",
		"command": "-chatgpt-vscode.addComments",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+1",
		"command": "-chatgpt-vscode.addTests",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+6",
		"command": "-chatgpt-vscode.completeCode",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+8",
		"command": "-chatgpt-vscode.customPrompt1",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+9",
		"command": "-chatgpt-vscode.customPrompt2",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+4",
		"command": "-chatgpt-vscode.explain",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+2",
		"command": "-chatgpt-vscode.findProblems",
		"when": "editorHasSelection"
	},
	{
		"key": "shift+cmd+a",
		"command": "-chatgpt-vscode.generateCode",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+k shift+cmd+3",
		"command": "-chatgpt-vscode.optimize",
		"when": "editorHasSelection"
	},
	{
		"key": "cmd+i",
		"command": "-markdown.extension.editing.toggleItalic",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "shift+cmd+i",
		"command": "-workbench.action.chat.openEditSession",
		"when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
	},
	{
		"key": "ctrl+d",
		"command": "-deleteRight",
		"when": "textInputFocus"
	},
	{
		"key": "shift+cmd+,",
		"command": "-editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k",
		"command": "-workbench.debug.panel.action.clearReplAction",
		"when": "focusedView == 'workbench.panel.repl.view'"
	},

	{
		"key": "cmd+.",
		"command": "-notebook.cell.openFailureActions",
		"when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
	},

	{
		"key": "cmd+.",
		"command": "-acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "cmd+.",
		"command": "-editor.changeDropType",
		"when": "dropWidgetVisible"
	},
	{
		"key": "cmd+.",
		"command": "-editor.changePasteType",
		"when": "pasteWidgetVisible"
	},
	{
		"key": "cmd+; cmd+a",
		"command": "-testing.debugAll"
	},
	{
		"key": "cmd+; cmd+e",
		"command": "-testing.debugFailTests"
	},
	{
		"key": "cmd+; cmd+l",
		"command": "-testing.debugLastRun"
	},
	{
		"key": "cmd+; cmd+c",
		"command": "-testing.debugAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+; cmd+f",
		"command": "-testing.debugCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+; cmd+m",
		"command": "-testing.openOutputPeek"
	},
	{
		"key": "cmd+; cmd+r",
		"command": "-testing.refreshTests",
		"when": "testing.canRefresh"
	},
	{
		"key": "cmd+; e",
		"command": "-testing.reRunFailTests"
	},
	{
		"key": "cmd+; l",
		"command": "-testing.reRunLastRun"
	},
	{
		"key": "cmd+; shift+cmd+l",
		"command": "-testing.coverageLastRun"
	},
	{
		"key": "cmd+; a",
		"command": "-testing.runAll"
	},
	{
		"key": "cmd+; shift+cmd+a",
		"command": "-testing.coverageAll"
	},
	{
		"key": "cmd+; c",
		"command": "-testing.runAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+; shift+cmd+c",
		"command": "-testing.coverageAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+; f",
		"command": "-testing.runCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+; shift+cmd+f",
		"command": "-testing.coverageCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+; cmd+o",
		"command": "-testing.showMostRecentOutput",
		"when": "testing.hasAnyResults"
	},
	{
		"key": "cmd+; shift+cmd+i",
		"command": "-testing.toggleInlineCoverage"
	},
	{
		"key": "cmd+; cmd+i",
		"command": "-testing.toggleInlineTestOutput"
	},
	{
		"key": "cmd+; cmd+x",
		"command": "-testing.cancelRun"
	},
	{
		"key": "shift+cmd+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "shift+alt+cmd+,",
		"command": "workbench.action.openRawDefaultSettings"
	},
	{
		"key": "ctrl+shift+up",
		"command": "workbench.action.moveEditorLeftInGroup"
	},
	{
		"key": "ctrl+shift+down",
		"command": "workbench.action.moveEditorRightInGroup"
	},
	// folding
	{
		"key": "cmd+k cmd+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+[",
		"command": "-editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "cmd+k cmd+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "cmd+k i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+c",
		"command": "-editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k m",
		"command": "-workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
	{
		"key": "cmd+k alt+cmd+c",
		"command": "-workbench.action.addComment",
		"when": "activeCursorHasCommentingRange"
	},
	{
		"key": "cmd+k alt+cmd+down",
		"command": "-editor.action.nextCommentingRange",
		"when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
	},
	{
		"key": "cmd+k alt+cmd+up",
		"command": "-editor.action.previousCommentingRange",
		"when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
	},
	{
		"key": "cmd+k cmd+,",
		"command": "-editor.createFoldingRangeFromSelection",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "cmd+k cmd+k",
		"command": "-editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/Users/ponomi/Library/Application%20Support/Code/User/keybindings.json'"
	},
	{
		"key": "cmd+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "cmd+k c",
		"command": "-workbench.files.action.compareWithClipboard"
	},
	{
		"key": "cmd+k alt+cmd+c",
		"command": "-copyFilePath",
		"when": "editorFocus"
	},
	{
		"key": "cmd+k shift+alt+cmd+c",
		"command": "-copyRelativeFilePath",
		"when": "editorFocus"
	},
	{
		"key": "cmd+k v",
		"command": "-markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "cmd+k cmd+d",
		"command": "-editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "cmd+k cmd+c",
		"command": "-notebook.cell.collapseCellInput",
		"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
	},
	{
		"key": "cmd+k t",
		"command": "-notebook.cell.collapseCellOutput",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
	},
	{
		"key": "cmd+k cmd+c",
		"command": "-notebook.cell.expandCellInput",
		"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
	},
	{
		"key": "cmd+k t",
		"command": "-notebook.cell.expandCellOutput",
		"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
	},
	{
		"key": "cmd+k shift+cmd+\\",
		"command": "-notebook.cell.split",
		"when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
	},
	{
		"key": "cmd+k y",
		"command": "-notebook.cell.toggleOutputScrolling",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
	},
	{
		"key": "cmd+k shift+cmd+n",
		"command": "-notifications.showList"
	},
	{
		"key": "cmd+k f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "cmd+k cmd+f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
	},
	{
		"key": "cmd+k cmd+t",
		"command": "-workbench.action.selectTheme"
	},
	{
		"key": "cmd+k cmd+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+.",
		"command": "-editor.removeManualFoldingRanges",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+k",
		"command": "-editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "cmd+k cmd+b",
		"command": "-editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+k cmd+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+k",
		"command": "-workbench.action.terminal.clear",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "cmd+k cmd+i",
		"command": "-workbench.action.terminal.focusHover",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "cmd+k cmd+l",
		"command": "-editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k shift+cmd+l",
		"command": "-editor.toggleFoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+x",
		"command": "-editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "cmd+k o",
		"command": "-workbench.action.copyEditorToNewWindow",
		"when": "activeEditor"
	},
	{
		"key": "cmd+k shift+cmd+\\",
		"command": "-workbench.action.joinEditorInGroup",
		"when": "sideBySideEditorActive"
	},
	{
		"key": "cmd+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "cmd+k alt+cmd+right",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "cmd+k alt+cmd+left",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "cmd+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "cmd+k z",
		"command": "-workbench.action.toggleZenMode",
		"when": "!isAuxiliaryWindowFocusedContext"
	},
	{
		"key": "cmd+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "cmd+k f",
		"command": "-workbench.action.closeFolder",
		"when": "emptyWorkspaceSupport && workbenchState != 'empty'"
	},
	{
		"key": "cmd+k cmd+a",
		"command": "-keybindings.editor.addKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "cmd+k cmd+e",
		"command": "-keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "cmd+k cmd+i",
		"command": "-list.showHover",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "cmd+k i",
		"command": "-notebook.cell.chat.start",
		"when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "cmd+k f2",
		"command": "-togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "cmd+k down",
		"command": "-views.moveViewDown",
		"when": "focusedView != ''"
	},
	{
		"key": "cmd+k left",
		"command": "-views.moveViewLeft",
		"when": "focusedView != ''"
	},
	{
		"key": "cmd+k right",
		"command": "-views.moveViewRight",
		"when": "focusedView != ''"
	},
	{
		"key": "cmd+k up",
		"command": "-views.moveViewUp",
		"when": "focusedView != ''"
	},
	{
		"key": "cmd+k shift+o",
		"command": "-workbench.action.compareEditor.openSide",
		"when": "inDiffEditor"
	},
	{
		"key": "cmd+k p",
		"command": "-workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "cmd+k r",
		"command": "-workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "cmd+backspace",
		"command": "-deleteAllLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "cmd+delete",
		"command": "-deleteAllRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k",
		"command": "-deleteAllRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+delete",
		"command": "-notebook.cell.clearOutputs",
		"when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "cmd+backspace",
		"command": "-notebook.cell.delete",
		"when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
	},
	{
		"key": "backspace",
		"command": "-noteMultiCursor.deleteLeft",
		"when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
	},
	{
		"key": "ctrl+k",
		"command": "extension.convertColorsToOKLCH"
	},
	{
		"key": "shift+cmd+,",
		"command": "workbench.action.openSettings"
	},
	{
		"key": "cmd+m",
		"command": "-markdown.extension.editing.toggleMath",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+b",
		"command": "markdown.extension.editing.toggleBold",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+s",
		"command": "-markdown.extension.editing.toggleStrikethrough",
		"when": "false"
	},
	{
		"key": "cmd+b",
		"command": "-markdown.extension.editing.toggleBold",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+i",
		"command": "markdown.extension.editing.toggleItalic",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+k",
		"command": "markdown.extension.editing.toggleStrikethrough",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+c",
		"command": "-markdown.extension.checkTaskList",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+l",
		"command": "markdown.extension.editing.toggleList",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+c",
		"command": "-markdown.extension.checkTaskList",
		"when": "false"
	},
	{
		"key": "alt+c",
		"command": "markdown.extension.editing.toggleCodeBlock",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+x",
		"command": "markdown.extension.editing.toggleCodeSpan",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "shift+alt+m",
		"command": "markdown.extension.editing.toggleMathReverse",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+m",
		"command": "markdown.extension.editing.toggleMath",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+t",
		"command": "markdownToggleTask.toggleTask",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "cmd+enter",
		"command": "-markdownToggleTask.toggleTask",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+enter",
		"command": "list.select",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "cmd+down",
		"command": "list.select",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "shift+alt+f3",
		"command": "-editor.action.dirtydiff.previous",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "alt+f3",
		"command": "-editor.action.dirtydiff.next",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+cmd+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "shift+cmd+t",
		"command": "-extension.openPreviewOnFocus",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+cmd+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "cmd+0",
		"command": "-fontshortcuts.resetEditorFontSize",
		"when": "editorFocus"
	},
	{
		"key": "cmd+0",
		"command": "-fontshortcuts.resetTerminalFontSize",
		"when": "terminalFocus"
	},
	{
		"key": "cmd+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "cmd+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "f8",
		"command": "-editor.action.marker.nextInFiles",
		"when": "editorFocus"
	},
	{
		"key": "shift+f8",
		"command": "-editor.action.marker.prevInFiles",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+f8",
		"command": "-editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "alt+f8",
		"command": "-editor.action.marker.next",
		"when": "editorFocus"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.wordHighlight.prev",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "f7",
		"command": "-editor.action.wordHighlight.next",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "alt+cmd+e",
		"command": "errorLens.toggle"
	},
	{
		"key": "alt+cmd+l",
		"command": "-bookmarks.jumpToNext",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+j",
		"command": "-bookmarks.jumpToPrevious",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+l",
		"command": "-bookmarks.expandSelectionToNext",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+j",
		"command": "-bookmarks.expandSelectionToPrevious",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+k",
		"command": "-bookmarks.shrinkSelection",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+k",
		"command": "-bookmarks.toggle",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+cmd+l",
		"command": "-workbench.action.quickchat.toggle",
		"when": "chatIsEnabled"
	},
	{
		"key": "alt+cmd+=",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "shift+cmd+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "alt+cmd+-",
		"command": "workbench.action.zoomOut"
	},
	// toggle width of sidebar
	{
		"key": "shift+cmd+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "shift+cmd+=",
		"when": "editorFocus",
		"command": "workbench.action.decreaseViewSize"
	},
	{
		"key": "shift+cmd+-",
		"when": "editorFocus",
		"command": "workbench.action.increaseViewSize"
	},
	{
		"key": "shift+cmd+-",
		"when": "sideBarFocus",
		"command": "workbench.action.decreaseViewSize"
	},
	{
		"key": "shift+cmd+=",
		"when": "sideBarFocus",
		"command": "workbench.action.increaseViewSize"
	},
	{
		"key": "shift+cmd+=",
		"when": "!sideBarFocus && !editorFocus",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["workbench.action.focusActiveEditorGroup", "workbench.action.decreaseViewSize"]
		}
	},
	{
		"key": "shift+cmd+-",
		"when": "!sideBarFocus && !editorFocus",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["workbench.action.focusActiveEditorGroup", "workbench.action.increaseViewSize"]
		}
	},
	{
		"key": "alt+enter",
		"command": "-notebook.cell.executeAndInsertBelow",
		"when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertCommand",
		"when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertFirstCommand",
		"when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "alt+enter",
		"command": "-debug.openBreakpointToSide",
		"when": "breakpointsFocused"
	},
	{
		"key": "alt+enter",
		"command": "-testing.editFocusedTest",
		"when": "focusedView == 'workbench.view.testing'"
	},
	{
		"key": "cmd+enter",
		"command": "-workbench.action.terminal.chat.runCommand",
		"when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "cmd+enter",
		"command": "-workbench.action.terminal.chat.runFirstCommand",
		"when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "cmd+enter",
		"command": "-notebook.cell.insertCodeCellBelow",
		"when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
	},
	{
		"key": "cmd+enter",
		"command": "-debug.openBreakpointToSide",
		"when": "breakpointsFocused"
	},
	{
		"key": "cmd+enter",
		"command": "-chatEditing.acceptAllFiles",
		"when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
	},
	{
		"key": "cmd+enter",
		"command": "-notebook.cell.chat.acceptChanges",
		"when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
	},
	{
		"key": "cmd+enter",
		"command": "-notebook.cell.chat.acceptChanges",
		"when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
	},
	{
		"key": "cmd+enter",
		"command": "-breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "cmd+enter",
		"command": "-breadcrumbs.revealFocusedFromTreeAside",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "cmd+enter",
		"command": "editor.action.selectAllMatches",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "alt+enter",
		"command": "-editor.action.selectAllMatches",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "alt+enter",
		"command": "editor.action.replaceAll",
		"when": "editorFocus && findWidgetVisible && replaceInputFocussed"
	},
	{
		"key": "cmd+enter",
		"command": "-editor.action.replaceAll",
		"when": "editorFocus && findWidgetVisible && replaceInputFocussed"
	},
	{
		"key": "shift+enter",
		"command": "-notebook.cell.executeAndSelectBelow",
		"when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "shift+enter",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "f3",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "cmd+g",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "tab",
		"command": "-jumpToNextSnippetPlaceholder",
		"when": "hasNextTabstop && inSnippetMode && textInputFocus"
	},
	{
		"key": "f3",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-notebook.cell.execute",
		"when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelCount > 0 || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelSourceCount > 0 || inlineChatFocused && notebookCellChatFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code'"
	},
	{
		"key": "ctrl+enter",
		"command": "-notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
	},
	{
		"key": "shift+alt+i",
		"command": "-editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+g",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "cmd+g",
		"command": "-workbench.action.terminal.goToRecentDirectory",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	// {
	// 	"key": "alt+cmd+t",
	// 	"command": "todo-tree.scanOpenFilesOnly"
	// },
	// {
	// 	"key": "ctrl+shift+alt+cmd+t",
	// 	"command": "todo-tree.scanWorkspaceAndOpenFiles"
	// },
	{
		"key": "alt+cmd+t",
		"command": "toggle",
		"args": {
			"id": "todo_visibility",
			"value": [
				{
					"todo-tree.tree.scanMode": "current file"
				},
				{
					"todo-tree.tree.scanMode": "workspace only"
				}
			]
		}
	},
	{
		"key": "cmd+i",
		"command": "-workbench.action.chat.startVoiceChat",
		"when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
	},
	{
		"key": "cmd+i",
		"command": "-workbench.action.chat.stopListeningAndSubmit",
		"when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.startWithCurrentLine",
		"when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
	},
	{
		"key": "cmd+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "shift+cmd+i",
		"command": "-workbench.panel.chatEditing",
		"when": "workbench.panel.chat.view.edits.active"
	},
	{
		"key": "shift+cmd+b",
		"when": "editorFocus || filesExplorerFocus",
		"command": "bookmarksExplorer.focus"
	},
	{
		"key": "cmd+[",
		"command": "-markdown.extension.onOutdentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "cmd+]",
		"command": "-markdown.extension.onIndentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "right",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "cmd+k i",
		"command": "-inlineChat.startWithCurrentLine",
		"when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
	},
	{
		"key": "cmd+m",
		"command": "workbench.action.gotoSymbol"
	},
	{
		"key": "alt+x",
		"command": "-bookmark.addBookmark",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+i",
		"command": "-workbench.action.toggleDevTools",
		"when": "isDevelopment"
	},
	{
		"key": "alt+cmd+i",
		"command": "workbench.action.toggleDevTools"
	},
	{
		"key": "alt+cmd+v",
		"command": "-workbench.action.editorDictation.start",
		"when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
	},
	{
		"key": "shift+cmd+f",
		"command": "-workbench.action.terminal.searchWorkspace",
		"when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "f4",
		"command": "-search.action.focusNextSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "shift+cmd+f",
		"command": "workbench.action.findInFiles"
	},
	{
		"key": "shift+cmd+f",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "searchViewletFocus"
	},
	{
		"key": "shift+cmd+w",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "alt+cmd+w",
		"command": "workbench.action.closeOtherEditors"
	},
	{
		"key": "alt+cmd+w",
		"command": "-toggleFindWholeWord",
		"when": "editorFocus"
	},
	{
		"key": "alt+cmd+w",
		"command": "-toggleSearchWholeWord",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+cmd+w",
		"command": "-toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "cmd+'",
		"command": "workbench.action.openGlobalKeybindingsFile"
	},
	{
		"key": "shift+cmd+'",
		"command": "workbench.action.openGlobalKeybindings"
	},
	{
		"key": "cmd+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "cmd+,",
		"command": "workbench.action.openSettingsJson"
	},
	{
		"key": "alt+cmd+s",
		"command": "-saveAll"
	},
	{
		"key": "alt+cmd+n",
		"command": "workbench.action.files.newUntitledFile"
	},
	{
		"key": "alt+cmd+a",
		"command": "align.by.regex",
		"when": "editorHasSelection"
	},
	{
		"key": "shift+alt+a",
		"command": "-align.by.regex",
		"when": "editorHasSelection"
	},
	{
		"key": "alt+cmd+o",
		"command": "-workbench.action.remote.showMenu"
	},
	{
		"key": "alt+cmd+o",
		"command": "-editor.action.toggleOvertypeInsertMode"
	},
	{
		"key": "f7",
		"command": "-editor.action.accessibleDiffViewer.next",
		"when": "isInDiffEditor"
	},
	{
		"key": "f7",
		"command": "-inlineChat.moveToNextHunk",
		"when": "inlineChatHasProvider && inlineChatVisible"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.accessibleDiffViewer.prev",
		"when": "isInDiffEditor"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "shift+alt+f5",
		"command": "-workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+left",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "alt+cmd+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+down",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+up",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+alt+cmd+down",
		"command": "-quickInput.nextSeparator",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+alt+cmd+up",
		"command": "-quickInput.previousSeparator",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "pagedown",
		"command": "-betterPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "alt+cmd+f",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "alt+cmd+f",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "alt+cmd+f",
		"command": "-list.find.replInputFocus",
		"when": "view == 'workbench.panel.repl.view'"
	},
	{
		"key": "alt+cmd+f",
		"command": "-repl.action.find",
		"when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-scrollLineDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "-scrollLineUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+down",
		"command": "-notebook.cell.moveDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.pageDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "alt+down",
		"command": "-markdown.extension.onMoveLineDown",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+down",
		"command": "-scm.forceViewNextCommit",
		"when": "scmRepository"
	},
	{
		"key": "alt+down",
		"command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
		"when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "alt+down",
		"command": "-history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
	},
	{
		"key": "alt+up",
		"command": "-notebook.cell.moveUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.pageUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "alt+up",
		"command": "-scm.forceViewPreviousCommit",
		"when": "scmRepository"
	},
	{
		"key": "alt+up",
		"command": "-markdown.extension.onMoveLineUp",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "alt+up",
		"command": "-showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+up",
		"command": "-history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
	},
	{
		"key": "alt+up",
		"command": "-list.focusAnyUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "alt+up",
		"command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
		"when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "alt+down",
		"command": "-showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+down",
		"command": "-list.focusAnyDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+cmd+up",
		"command": "-notebook.cell.focusOutOutput",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+cmd+up",
		"command": "-workbench.action.terminal.resizePaneUp",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+cmd+up",
		"command": "-quickInput.previousSeparator",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+cmd+down",
		"command": "-notebook.cell.focusInOutput",
		"when": "notebookCellHasOutputs && notebookEditorFocused"
	},
	{
		"key": "ctrl+cmd+down",
		"command": "-notebook.focusNextEditor",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+cmd+down",
		"command": "-workbench.action.terminal.resizePaneDown",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+cmd+down",
		"command": "-quickInput.nextSeparator",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "alt+cmd+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+cmd+l",
		"command": "-toggleFindInSelection",
		"when": "editorFocus"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.editor.nextChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "alt+cmd+b",
		"command": "bookmarks.toggle",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+a",
		"command": "-bracket-select.select",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+a",
		"command": "-bracket-select.select-include",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+a",
		"command": "editor.action.selectToBracket"
	},
	{
		"key": "alt+cmd+k",
		"command": "-keybindings.editor.recordSearchKeys",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "alt+cmd+p",
		"command": "-projectManager.listProjects"
	},
	{
		"key": "alt+cmd+p",
		"command": "-togglePreserveCase",
		"when": "editorFocus"
	},
	{
		"key": "alt+cmd+p",
		"command": "-keybindings.editor.toggleSortByPrecedence",
		"when": "inKeybindings"
	},
	{
		"key": "ctrl+alt+k",
		"command": "-BracketHighlighter.selectTextInSymbols",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+cmd+[Backquote]",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "alt+cmd+m",
		"command": "markdown.extension.toc.create"
	},
	{
		"key": "alt+[",
		"command": "dakara-foldplus.levelAtCursor"
	},
	{
		"key": "ctrl+alt+-",
		"command": "dakara-foldplus.cursor.exclude"
	},
	{
		"key": "alt+[",
		"command": "-editor.action.accessibleViewPrevious",
		"when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
	},
	{
		"key": "alt+[",
		"command": "-editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	// {
	// 	"key": "alt+cmd+r",
	// 	"command": "-toggleFindRegex",
	// 	"when": "editorFocus"
	// },
	// {
	// 	"key": "alt+cmd+r",
	// 	"command": "-toggleSearchRegex",
	// 	"when": "searchViewletFocus"
	// },
	// {
	// 	"key": "alt+cmd+r",
	// 	"command": "-workbench.action.terminal.toggleFindRegex",
	// 	"when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
	// },
	{
		"key": "alt+cmd+r",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},
	{
		"key": "cmd+f10",
		"command": "-regexExplainer.regExpEditor"
	},
	{
		"key": "cmd+/",
		"command": "-toggleExplainMode",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "cmd+b",
		"command": "bookmarks.jumpToNext"
	},
	// fold
	{
		"key": "cmd+[BracketLeft]",
		"command": "editor.fold"
	},
	{
		"key": "ctrl+cmd+[",
		"command": "editor.foldAll"
	},
	{
		"key": "ctrl+cmd+[BracketLeft]",
		"command": "editor.foldAll"
	},
	{
		"key": "alt+cmd+[",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["editor.foldAllExcept", "editor.unfoldRecursively"]
		}
	},
	{
		"key": "alt+cmd+[BracketLeft]",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": ["editor.foldAllExcept", "editor.unfoldRecursively"]
		}
	},

	// unfold
	{
		"key": "cmd+]",
		"command": "editor.unfold"
	},
	{
		"key": "cmd+[BracketRight]",
		"command": "editor.unfold"
	},
	{
		"key": "alt+cmd+]",
		"command": "editor.unfoldRecursively"
	},
	{
		"key": "alt+cmd+[BracketRight]",
		"command": "editor.unfoldRecursively"
	},
	{
		"key": "ctrl+cmd+]",
		"command": "editor.unfoldAll"
	},
	{
		"key": "ctrl+cmd+[BracketRight]",
		"command": "editor.unfoldAll"
	},
	// unbind fold/unfold
	{
		"key": "cmd+[",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+]",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+cmd+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+[",
		"command": "-notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "alt+cmd+]",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "alt+cmd+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+-",
		"command": "-editor.foldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+=",
		"command": "-editor.unfoldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+/",
		"command": "-editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+]",
		"command": "-editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+alt+down",
		"command": "editor.gotoNextFold"
	},
	// {
	// 	"key": "alt+cmd+r",
	// 	"command": "-toggleFindRegex",
	// 	"when": "editorFocus"
	// },
	// {
	// 	"key": "alt+cmd+r",
	// 	"command": "-toggleSearchRegex",
	// 	"when": "searchViewletFocus"
	// },
	{
		"key": "cmd+\\",
		"command": "-workbench.action.splitEditor"
	},
	{
		"key": "cmd+\\",
		"command": "-workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "cmd+\\",
		"command": "-workbench.action.terminal.splitActiveTab",
		"when": "terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "cmd+\\",
		"command": "editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+cmd+\\",
		"command": "-editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+[Semicolon]",
		"command": "workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "ctrl+alt+up",
		"command": "editor.gotoPreviousFold"
	},
	{
		"key": "alt+cmd+x",
		"command": "workbench.action.editor.changeLanguageMode"
	},
	{
		"key": "alt+cmd+c",
		"command": "-copyFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "alt+cmd+c",
		"command": "-toggleSearchCaseSensitive",
		"when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
	},
	{
		"key": "alt+cmd+c",
		"command": "-toggleSearchEditorCaseSensitive",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+cmd+c",
		"command": "-workbench.action.terminal.toggleFindCaseSensitive",
		"when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
	},
	{
		"key": "alt+cmd+c",
		"command": "-search.action.copyPath",
		"when": "fileMatchOrFolderMatchWithResourceFocus"
	},
	{
		"key": "alt+cmd+c",
		"command": "-toggleFindCaseSensitive",
		"when": "editorFocus"
	},
	{
		"key": "alt+cmd+f",
		"command": "editor.action.formatSelection"
	},
	{
		"key": "shift+alt+f12",
		"command": "-references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},
	{
		"key": "cmd+r",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f4",
		"command": "-references-view.next",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "shift+alt+r",
		"command": "-extension.applescript.run",
		"when": "editorFocus && editorLangId == 'applescript'"
	},
	{
		"key": "shift+alt+r",
		"command": "references-view.prev",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "shift+f4",
		"command": "-references-view.prev",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "cmd+[Quote]",
		"command": "workbench.action.openGlobalKeybindingsFile"
	},
	{
		"key": "cmd+[Comma]",
		"command": "workbench.action.openSettingsJson"
	},
	{
		"key": "shift+cmd+[Quote]",
		"command": "workbench.action.openGlobalKeybindings"
	},
	{
		"key": "shift+cmd+[Comma]",
		"command": "workbench.action.openSettings"
	},
	{
		"key": "alt+cmd+p",
		"command": "-toggleSearchPreserveCase",
		"when": "searchViewletFocus"
	},
	{
		"key": "shift+cmd+p",
		"command": "projectManager.listFavoriteProjects#sideBarFavorites"
	},
	{
		"key": "shift+enter",
		"command": "-interactive.execute",
		"when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive'"
	},
	{
		"key": "shift+enter",
		"command": "-repl.execute",
		"when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl'"
	},
	{
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
	},
	{
		"key": "shift+cmd+[",
		"command": "-dimmer.SrinkDimmer"
	},
	{
		"key": "shift+cmd+[",
		"command": "-workbench.action.debug.prevConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "shift+cmd+]",
		"command": "-workbench.action.debug.nextConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "shift+cmd+]",
		"command": "-dimmer.ExpandDimmer"
	},
	{
		"key": "shift+cmd+k",
		"command": "workbench.action.toggleStatusbarVisibility"
	},
	{
		"key": "shift+alt+cmd+k",
		"command": "workbench.action.toggleActivityBarVisibility"
	},
	{
		"key": "shift+cmd+w",
		"command": "markwhen.openPreview"
	},
	{
		"key": "cmd+e",
		"command": "editor.action.marker.next"
	},
	{
		"key": "cmd+d",
		"command": "quickDim.dim"
	},
	{
		"key": "shift+cmd+/",
		"command": "-cloak.toggleSecrets"
	},
	{
		"key": "alt+cmd+h",
		"command": "cloak.hideSecrets"
	},
	{
		"key": "alt+cmd+r",
		"command": "references-view.clear"
	},
	{
		"key": "shift+alt+d",
		"command": "-notebook.cell.detectLanguage",
		"when": "notebookCellEditable && notebookEditable"
	}
]
